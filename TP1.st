Object subclass: #AlgoTek	instanceVariableNames: 'lista_artistas lista_ubicaciones'	classVariableNames: ''	package: 'TP1'!!AlgoTek methodsFor: 'initialization' stamp: 'Fernando 10/14/2023 00:45'!initialize 	lista_artistas := OrderedCollection new.	lista_ubicaciones := OrderedCollection new.! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 01:07'!paraEvento: nombre_ingresado registrarUbicacionCampo: nombre_ubicacion_ingresada tarifa: tarifa_ingresada	|objeto_campo|	objeto_campo := Campo new.	objeto_campo ingresarNombreEvento: nombre_ingresado.	objeto_campo ingresarNombreUbicacion: nombre_ubicacion_ingresada.	objeto_campo ingresarTarifaUbicacion: tarifa_ingresada.	lista_ubicaciones add: objeto_campo.! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 21:03'!costoEntradaPara: nombre_evento_ingresado enUbicacion: ubicacion_elegida pagandoCon: pago_ingresado! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 01:10'!paraEvento: nombre_evento_ingresado registrarUbicacionViP: nombre_ubicacion_ingresada tarifa: tarifa_ingresada lugaresDisponibles: cantidad_ingresados	|objeto_vip|	objeto_vip := Vip new.	objeto_vip ingresarNombreEvento: nombre_evento_ingresado.	objeto_vip ingresarNombreUbicacion: nombre_ubicacion_ingresada.	objeto_vip ingresarTarifaUbicacion: tarifa_ingresada.	objeto_vip ingresarCantidadLugaresDisponibles: cantidad_ingresados.	lista_ubicaciones add: objeto_vip.! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 01:02'!paraEvento: nombre_evento_ingresado registrarUbicacionPlateaPreferencial: nombre_ubicacion_ingresada tarifa: tarifa_ingresada	|objeto_platea|	objeto_platea := PlateaPreferencial new.	objeto_platea ingresarNombreEvento: nombre_evento_ingresado.	objeto_platea ingresarNombreUbicacion: nombre_ubicacion_ingresada.	objeto_platea ingresarTarifaUbicacion: tarifa_ingresada.	lista_ubicaciones add: objeto_platea.! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'Fernando 10/10/2023 03:55'!ingresarArtista: artista_ingresado	lista_artistas add: artista_ingresado.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoTek class	instanceVariableNames: ''!!AlgoTek class methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 19:56'!registrarEvento: nombre_evento deArtistaInternacional: nombre_ingresado conTarifaArtista: tarifa_ingresada	|objeto_artista_internacional  objeto_algotek|	objeto_artista_internacional := ArtistaInternacional ingresarNombreDelInternacional: nombre_ingresado ySuTarifa: tarifa_ingresada yElNombreDelEventoEs: nombre_evento.	objeto_algotek := AlgoTek new.	objeto_algotek ingresarArtista: objeto_artista_internacional.	^objeto_algotek ! !!AlgoTek class methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 19:47'!registrarEvento: nombre_evento deArtistaNacional: artista_nacional_ingresado conTarifaArtista: tarifa_ingresada	|objeto_artista_nacional objeto_algotek|	objeto_artista_nacional := ArtistaNacional ingresarNombreDelNacional: artista_nacional_ingresado ySuTarifa: tarifa_ingresada yElNombreDelEventoEs: nombre_evento.	objeto_algotek := AlgoTek new.	objeto_algotek ingresarArtista: objeto_artista_nacional.	^objeto_algotek ! !Object subclass: #Artista	instanceVariableNames: 'nombre_artista tarifa_artista evento_artista'	classVariableNames: ''	package: 'TP1'!!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 15:45'!establecerNombreArtista: nombre_ingresado	nombre_artista := nombre_ingresado.! !!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 21:59'!getEventoArtista	^evento_artista 	! !!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 15:45'!establecerEventoArtista: nombre_evento_ingresado	evento_artista := nombre_evento_ingresado.! !!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/9/2023 23:35'!establecerTarifaArtista: tarifa_ingresada	tarifa_artista := tarifa_ingresada.! !!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 22:15'!getTarifaArtista	^tarifa_artista ! !!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 22:20'!costoArtista	"Corresponde que el calculo del costo lo hagan las clases hijas de la clase Artista? De alguna manera, hay que justificar la creacion de las clases hijas"	self subclassResponsibility ! !!Artista methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 21:59'!getNombreArtista 	^nombre_artista ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Artista class	instanceVariableNames: ''!!Artista class methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 19:50'!ingresarNombre: nombre_ingresado eIngresarTarifa: tarifa_ingresada eIngresarEvento: nombre_evento_ingresado	|objeto_artista|	objeto_artista := Artista new.	objeto_artista establecerNombreArtista: nombre_ingresado.	objeto_artista establecerTarifaArtista: tarifa_ingresada.	objeto_artista establecerEventoArtista: nombre_evento_ingresado.! !Artista subclass: #ArtistaInternacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ArtistaInternacional methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 22:50'!costoArtista 	|resultado auxiliar_tarifa|	auxiliar_tarifa := self getTarifaArtista.	resultado := (auxiliar_tarifa * 2) / 5 + 1000.	^resultado  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ArtistaInternacional class	instanceVariableNames: ''!!ArtistaInternacional class methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 19:53'!ingresarNombreDelInternacional: nombre_artista_internacional_ingresado ySuTarifa: tarifa_ingresada yElNombreDelEventoEs: nombre_evento_ingresado.	self ingresarNombre: nombre_artista_internacional_ingresado eIngresarTarifa: tarifa_ingresada eIngresarEvento: nombre_evento_ingresado.! !Artista subclass: #ArtistaNacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ArtistaNacional methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 22:52'!costoArtista 	^ (self getTarifaArtista) log! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ArtistaNacional class	instanceVariableNames: ''!!ArtistaNacional class methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 19:49'!ingresarNombreDelNacional: nombre_artista_nacional_ingresado ySuTarifa: tarifa_ingresada yElNombreDelEventoEs: nombre_evento_ingresado.	self ingresarNombre: nombre_artista_nacional_ingresado eIngresarTarifa: tarifa_ingresada eIngresarEvento: nombre_evento_ingresado. ! !Object subclass: #TipoDePago	instanceVariableNames: 'monto'	classVariableNames: ''	package: 'TP1'!!TipoDePago methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 20:40'!aplicarDescuento: descuento_ingresado aImporte: importe_ingresado	self subclassResponsibility ! !TipoDePago subclass: #Efectivo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Efectivo methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 20:44'!aplicarDescuento: descuento_ingresado aImporte: importe_ingresado	^importe_ingresado ! !TipoDePago subclass: #Tarjeta	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Tarjeta methodsFor: 'as yet unclassified' stamp: 'Fernando 10/16/2023 20:42'!aplicarDescuento: descuento_ingresado aImporte: importe_ingresado! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tarjeta class	instanceVariableNames: 'nombre_tarjeta'!!Tarjeta class methodsFor: 'as yet unclassified' stamp: 'Fernando 10/7/2023 16:01'!conNombre: nombre_ingresado	nombre_tarjeta := nombre_ingresado.	! !Object subclass: #Ubicacion	instanceVariableNames: 'nombre_ubicacion tarifa_ubicacion nombre_evento'	classVariableNames: ''	package: 'TP1'!!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 00:41'!obtenerNombreEvento	^nombre_evento ! !!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/13/2023 20:39'!obtenerNombreUbicacion	^nombre_ubicacion ! !!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 00:38'!ingresarNombreEvento: nombre_ingresado	nombre_evento := nombre_ingresado.! !!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 00:03'!obtenerTarifaUbicacion	^tarifa_ubicacion ! !!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/13/2023 19:48'!calcularCosto	self subclassResponsibility.! !!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/13/2023 01:29'!ingresarTarifaUbicacion: tarifa_ingresada	tarifa_ubicacion := tarifa_ingresada.	! !!Ubicacion methodsFor: 'as yet unclassified' stamp: 'Fernando 10/13/2023 01:25'!ingresarNombreUbicacion: nombre_ubicacion_ingresada	nombre_ubicacion := nombre_ubicacion_ingresada. 	! !Ubicacion subclass: #Campo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Campo methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 00:20'!calcularCosto 	^ self obtenerTarifaUbicacion  ! !Ubicacion subclass: #PlateaPreferencial	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PlateaPreferencial methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 00:23'!calcularCosto 	^ self obtenerTarifaUbicacion ! !Ubicacion subclass: #Vip	instanceVariableNames: 'cantidad_lugares_disponibles'	classVariableNames: ''	package: 'TP1'!!Vip methodsFor: 'as yet unclassified' stamp: 'Fernando 10/12/2023 20:43'!getCantidadLugaresDisponibles	^cantidad_lugares_disponibles ! !!Vip methodsFor: 'as yet unclassified' stamp: 'Fernando 10/14/2023 00:14'!calcularCosto 	|auxiliar_vip resultado|	auxiliar_vip := self obtenerTarifaUbicacion.	resultado := cantidad_lugares_disponibles*auxiliar_vip.	^resultado! !!Vip methodsFor: 'as yet unclassified' stamp: 'Fernando 10/12/2023 20:38'!ingresarCantidadLugaresDisponibles: cantidad_ingresada	cantidad_lugares_disponibles := cantidad_ingresada.! !